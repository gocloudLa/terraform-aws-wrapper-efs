module_name: Terraform EFS Module
module_description: The Terraform Wrapper for EFS simplifies the creation of Amazon's Elastic File System (NFS compatibility) service, creates mount points in the private subnets, and exposes connection endpoints (exported directories).
module_badges:
  - url: "https://github.com/gocloudLa/terraform-aws-wrapper-efs/releases/latest"
    image: "https://img.shields.io/github/v/release/gocloudLa/terraform-aws-wrapper-efs.svg?style=for-the-badge"
    alt: "Latest Release"
  - url: ""
    image: "https://img.shields.io/github/last-commit/gocloudLa/terraform-aws-wrapper-efs.svg?style=for-the-badge"
    alt: "Last Commit"
  - url: "https://registry.terraform.io/modules/gocloudLa/wrapper-efs/aws"
    image: "https://img.shields.io/badge/Terraform-Registry-7B42BC?style=for-the-badge&logo=terraform&logoColor=white"
    alt: "Terraform Registry"
quick_start: |
  ```hcl
  efs_parameters = {
      # vpc_name    = "" # Default: ${local.common_name} (dmc-prd)
      # subnet_name = "" # Default: ${local.common_name}-private* (dmc-prd-private*)
      "00" = {
        access_points = {
          "root" = {
            root_directory = {
              path = "/"
              creation_info = {
                owner_gid   = 1001
                owner_uid   = 1001
                permissions = "755"
              }
            }
          }
          "example" = {
            root_directory = {
              path = "/example"
              creation_info = {
                owner_gid   = 1001
                owner_uid   = 1001
                permissions = "755"
              }
            }
          }
        }
      }
    }
    efs_defaults = var.efs_defaults
  ```
features: []
important_notes: ""
input_table: |
  | name | Name of the EFS | `string` | `"${local.common_name}-${each.key}"` | no |
  | access_points | Access points configuration | `map` | `{}` | no |
  | attach_policy | Whether to attach a policy to the EFS | `bool` | `true` | no |
  | availability_zone_name | Name of the availability zone | `string` | `null` | no |
  | bypass_policy_lockout_safety_check | Bypass lockout safety check for policies | `bool` | `null` | no |
  | create | Whether to create the EFS | `bool` | `true` | no |
  | create_backup_policy | Whether to create a backup policy for the EFS | `bool` | `true` | no |
  | create_replication_configuration | Whether to create replication configuration for the EFS | `bool` | `false` | no |
  | create_security_group | Whether to create a security group for the EFS | `bool` | `true` | no |
  | creation_token | Token for EFS creation | `string` | `null` | no |
  | deny_nonsecure_transport | Deny insecure transport to the EFS | `bool` | `true` | no |
  | enable_backup_policy | Enables backup policy for the EFS | `bool` | `true` | no |
  | encrypted | Whether the EFS is encrypted | `bool` | `true` | no |
  | kms_key_arn | ARN of the KMS key used for encryption | `string` | `null` | no |
  | lifecycle_policy | Lifecycle policy for EFS | `map` | `{}` | no |
  | mount_targets | Mount targets for the EFS | `list` | `local.default_mount_targets` | no |
  | override_policy_documents | Policy documents that override default policies | `list` | `[]` | no |
  | performance_mode | Performance mode of the EFS | `string` | `null` | no |
  | policy_statements | A list of IAM policy statements for custom permission usage | `map` | `null` | no |
  | provisioned_throughput_in_mibps | Provisioned throughput in MiBps | `number` | `null` | no |
  | replication_configuration_destination | Destination for EFS replication configuration | `map` | `null` | no |
  | security_group_description | Description of the security group for the EFS | `string` | `"${local.common_name}-efs-${each.key}"` | no |
  | security_group_name | Name of the security group for the EFS | `string` | `"${local.common_name}-efs-${each.key}"` | no |
  | input_security_group_egress_rules | Map of security group egress rules to add to the security group created | `map` | `{}` | no |
  | input_security_group_ingress_rules | Map of security group ingress rules to add to the security group created | `map` | `{}` | no |
  | security_group_use_name_prefix | Whether to use a name prefix for the security group | `bool` | `false` | no |
  | security_group_vpc_id | VPC ID to associate with the security group | `string` | `data.aws_vpc.this[each.key].id` | no |
  | source_policy_documents | Source policy documents for the EFS | `list` | `[]` | no |
  | throughput_mode | Throughput mode for the EFS | `string` | `null` | no |
  | vpc_name | (optional) Custom VPC Name | `string` | ``${local.common_name}` (dmc-prd)` | no |
  | subnet_name | (optional) Custom Subnet Filter | `string` | ``${local.common_name}-private*` (dmc-prd-private*)` | no |
  | deny_nonsecure_transport_via_mount_target | Determines whether to use the common policy option for denying nonsecure transport which allows all AWS principals when accessed via EFS mounted target | `bool` | `true` | no |
  | protection | A map of file protection configurations | `any` | `null` | no |
  | region | Region where this resource will be managed. Defaults to the Region set in the provider configuration. | string | null | no |
  | tags | A map of tags to assign to resources. | `map` | `{}` | no |